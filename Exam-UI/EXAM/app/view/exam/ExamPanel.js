/*
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Desktop.view.exam.ExamPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.examPanel',

    requires: [
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.Panel',
        'Ext.grid.column.Boolean',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Text',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.grid.filters.filter.Number',
        'Ext.grid.column.Date',
        'Ext.grid.filters.filter.Date',
        'Ext.grid.filters.filter.String',
        'Ext.grid.filters.filter.Boolean',
        'Ext.selection.CheckboxModel',
        'Ext.grid.filters.Filters',
        'Ext.grid.feature.Summary',
    ],

    controller: 'examController',

    id: 'examMain',
    autoShow: true,
    height: 649,
    width: 899,
    layout: 'fit',
    maximized: true,
    minimizable: true,
    header: false,
    modal: true,

    items: [
        {
            xtype: 'panel',
            id: 'allexamPanel',
            reference: 'allexamPanel',
            collapsible: true,
            collapsed: true,
            title: 'View exam',
            margin: '10 10 10 10',
            layout: 'column',
            items: [
            {
                xtype: 'gridpanel',
                reference: 'examSearchGrid',
                itemId: 'examSearchGrid',
                columnWidth: 1,
                multiSelect: true,
                loadMask: true,
                store: 'gExamStore',
                plugins: [{
                    ptype: 'gridfilters'
                }],
                viewConfig: {
                    stripeRows: true,
                    enableTextSelection: true,
                },
                features: [{
                    ftype: 'grouping',
                    groupHeaderTpl: '{name} ({children.length})',
                    enableNoGroups: true
                }],

                dockedItems: [{
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'refreshexamViewGrid',
                    items: [
                        '->',
                        {
                            xtype : 'button',
                            text : 'Participate',
                            reference: 'participateBtn',
                            itemId: 'participateBtn',
                            align: 'right',
                            listeners : {
                                click : 'onClickParticipateBtnExamBtn'
                            }
                        },
                        {
                            xtype : 'button',
                            text : 'Refresh',
                            iconCls: 'icon-refresh',
                            tooltip: 'Refresh Data',
                            reference: 'qusGridRefreshBtn',
                            itemId: 'qusGridRefreshBtn',
                            align: 'right',
                            listeners : {
                                click : 'onRefreshexamViewGrid'
                            }
                        }
                    ]
                }],

                columns: [
                    {
                        xtype: 'gridcolumn',
                        align: 'center',
                        width: 100,
                        dataIndex: 'examKey',
                        hidden: true,
                        sortable: true,
                        text: 'Exam ID',
                    },
                    {
                        xtype: 'gridcolumn',
                        align: 'center',
                        width: 100,
                        dataIndex: 'examinerKey',
                        hidden: true,
                        sortable: true,
                        text: 'Examiner ID',
                    },
                    {
                        header: "Exam Title",
                        align: 'center',
                        flex: 1,
                        sortable: true,
                        dataIndex: 'examType',
                        filter: {type: 'string'}
                    },
                    {
                        header: "Total Time(Min)",
                        align: 'center',
                        width: 200,
                        sortable: true,
                        dataIndex: 'totalTimeInMin',
                        filter: {type: 'number'}
                    },
                    {
                        header: "Negative Marking",
                        align: 'center',
                        width: 200,
                        sortable: true,
                        dataIndex: 'doNegativeMarking',
                        filter: {type: 'string'},
                        renderer: function (value, meta, record) {
                            return value ? "YES" : "NO";
                        }
                    },
                    {
                        header: "Negative Mark",
                        align: 'center',
                        width: 200,
                        sortable: true,
                        dataIndex: 'negativeMark',
                        filter: {type: 'number'}
                    },
                    {
                        header: "Use Each Qus Time",
                        align: 'center',
                        width: 200,
                        sortable: true,
                        dataIndex: 'useEachQusTime',
                        filter: {type: 'string'},
                        renderer: function (value, meta, record) {
                            return value ? "YES" : "NO";
                        }
                    },
                ],
                selModel: {
                    selType: 'checkboxmodel',
                }
            }
            ]
        }
    ],
    listeners: {
        afterrender: 'onActivateExamPanel',
    }
});
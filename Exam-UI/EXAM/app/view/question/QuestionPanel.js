/*
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Desktop.view.question.QuestionPanel', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.questionPanel',

	requires: [
		'Ext.tab.Panel',
		'Ext.tab.Tab',
		'Ext.grid.Panel',
		'Ext.grid.column.Boolean',
		'Ext.toolbar.Toolbar',
		'Ext.form.field.Text',
		'Ext.tree.Panel',
		'Ext.tree.View',
		'Ext.grid.filters.filter.Number',
		'Ext.grid.column.Date',
		'Ext.grid.filters.filter.Date',
		'Ext.grid.filters.filter.String',
		'Ext.grid.filters.filter.Boolean',
		'Ext.selection.CheckboxModel',
		'Ext.grid.filters.Filters',
		'Ext.grid.feature.Summary',
	],

	controller: 'questionController',

	id: 'questionMain',
	autoShow: true,
	height: 649,
	width: 899,
	layout: 'fit',
	maximized: true,
	minimizable: true,
	header: false,
	modal: true,

	items: [
		{
            xtype: 'panel',
            id: 'addNewQuestionPanel',
            reference: 'addNewQuestionPanel',
            collapsible: true,
            collapsed: true,
            title: 'Add New Question',
            margin: '10 10 10 10',
            layout: 'column',
            autoHeight: true,
            dockedItems: [{
				xtype: 'toolbar',
				dock: 'bottom',
				shadow: true,
				itemId: 'saveOptionTollbar',
				layout: {
					type: 'hbox',
					align: 'middle',
					pack: 'center'
				},
				items: [{
						xtype: 'button',
						padding: 2,
						text: 'Save',
						reference: 'saveOptionBtn',
						listeners: {
							click: 'onClickSaveOptionBtn'
						}
					},
					{
						xtype: 'button',
						padding: 2,
						text: 'Reset',
						reference: 'resetOptionBtn',
						listeners: {
							click: 'onClickResetOptionBtn'
						}
					}
				]
			}],
            items: [
            {
                xtype : 'textareafield',
                grow : true,
                height: 40,
                columnWidth: .8,
                itemId: 'questionInput',
                reference: 'questionInput',
                fieldLabel: 'Question',
                labelAlign: 'left',
                labelWidth: 70,
                margin: '5 10 5 15',
            },
            {
                xtype: 'numberfield',
                itemId: 'questionMark',
                reference: 'questionMark',
                columnWidth: .20,
                fieldLabel: 'Mark',
                labelAlign: 'left',
                labelWidth: 50,
                margin: '5 10 5 15',
                format: '0.00',
                minValue: 0,
                hideTrigger: true,
                keyNavEnabled: false,
                mouseWheelEnabled: false
            },
            {
                xtype: 'gridpanel',
                reference: 'addNewQuestionGrid',
                columnWidth: 1,
                margin: '5 10 5 15',
                layout: 'column',
                header: false,
                border: true,
                title: false,
                store: 'gOptionStoreToSave',
                viewConfig : {
                    stripeRows : true,
                    autoHeight : true,
                    enableTextSelection: true,
                    columnLines: true
                },

                plugins: [],

                selModel: {
					selType: 'checkboxmodel',
				},

				dockedItems: [{
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype : 'displayfield',
                            value: 'Add your option. And Please, keep the correct answer selected'
                        }
                    ]
                }],

                columns: [
                    {
                        header: "Option Id",
                        width: 100,
                        sortable: true,
                        dataIndex: 'optionKey',
                        filter: {
                            type: 'list'
                        }
                    },
                    {
                        header: "Question ID",
                        width: 100,
                        sortable: true,
                        dataIndex: 'questionKey',
                        editable: true,
                        editor: 'textfield',
                        filter: {
                            type: 'list'
                        }
                    },
                    {
                        header: "Option",
                        flex: 1,
                        sortable: true,
                        dataIndex: 'option',
                        editable: true,
                        editor: 'textfield',
                        filter: {
                            type: 'text'
                        }
                    },
                    {
                        xtype: 'actioncolumn',
                        width:30,
                        sortable: false,
                        align: 'center',
                        iconCls : 'grid-delete',
                        reference: 'deleteReference',
                        tooltip: 'Delete Option',
                        handler: 'onDelOption'
                    },
                    {
                        xtype: 'actioncolumn',
                        width:30,
                        sortable: false,
                        align: 'center',
                        iconCls : 'new-icon2',
                        reference: 'addNewCellReference',
                        tooltip: 'New Option',
                        handler : 'onNewOption'
                    }
                ]
            }
            ]
        },
        {
            xtype: 'panel',
            id: 'allQuestionPanel',
            reference: 'allQuestionPanel',
            collapsible: true,
            collapsed: true,
            title: 'View Question',
            margin: '10 10 10 10',
            layout: 'column',
            items: [
			{
				xtype: 'gridpanel',
				reference: 'questionSearchGrid',
				itemId: 'questionSearchGrid',
				columnWidth: 1,
				multiSelect: true,
				loadMask: true,
				store: 'gQuestionStore',
				plugins: [{
					ptype: 'gridfilters'
				}],
				listeners: {
					selectionchange : 'onQuestionViewGridItemSelect'
				},
				viewConfig: {
					stripeRows: true,
					enableTextSelection: true,
				},
				features: [{
					ftype: 'grouping',
					groupHeaderTpl: '{name} ({children.length})',
					enableNoGroups: true
				}],

				dockedItems: [{
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'refreshQuestionViewGrid',
                    items: [
                        '->',
                        {
                            xtype : 'button',
                            text : 'Add to Exam',
                            reference: 'qusAddToExamBtn',
                            itemId: 'qusAddToExamBtn',
                            align: 'right',
                            listeners : {
                                click : 'onClickQusAddToExamBtn'
                            }
                        },
                        {
                            xtype : 'button',
                            text : 'Refresh',
                            iconCls: 'icon-refresh',
                            tooltip: 'Refresh Data',
                            reference: 'qusGridRefreshBtn',
                            itemId: 'qusGridRefreshBtn',
                            align: 'right',
                            listeners : {
                                click : 'onRefreshQuestionViewGrid'
                            }
                        }
                    ]
                }],

				columns: [
					{
						xtype: 'gridcolumn',
						align: 'center',
						width: 100,
						dataIndex: 'questionKey',
						hidden: true,
						sortable: true,
						text: 'Question ID',
					},

					{
						header: "Question",
						align: 'center',
						flex: 1,
						sortable: true,
						dataIndex: 'question',
						filter: {type: 'string'}
					},
					{
						header: "Mark",
						align: 'center',
						width: 200,
						sortable: true,
						dataIndex: 'mark',
						filter: {type: 'number'},
						renderer: function (value, meta, record) {
							return value;
						}
					}
				],
				selModel: {
					selType: 'checkboxmodel',
				}
			},
            {
                xtype: 'gridpanel',
                reference: 'viewOptionGrid',
                columnWidth: 1,
                margin: '5 10 5 15',
                layout: 'column',
                header: false,
                border: true,
                title: false,
                store: 'gOptionStore',
                viewConfig : {
                    stripeRows : true,
                    autoHeight : true,
                    enableTextSelection: true,
                    columnLines: true
                },

                plugins: [],

                selModel: {
					selType: 'checkboxmodel',
				},

				dockedItems: [{
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype : 'displayfield',
                            value: 'Options'
                        }
                    ]
                }],

                columns: [
                    {
                        header: "Option Id",
                        width: 100,
                        sortable: true,
                        dataIndex: 'optionKey',
                        filter: {
                            type: 'list'
                        }
                    },
                    {
                        header: "Question ID",
                        width: 100,
                        sortable: true,
                        dataIndex: 'questionKey',
                        filter: {
                            type: 'list'
                        }
                    },
                    {
                        header: "Option",
                        flex: 1,
                        sortable: true,
                        dataIndex: 'option',
                        filter: {
                            type: 'text'
                        }
                    },
                    {
                        header: "Correct Ans",
                        width: 100,
                        sortable: true,
                        dataIndex: 'correctAns',
                        filter: {
                            type: 'string'
                        },
                        renderer: function (value, metaData, record, rowIdx, colIdx, store) {
                            return value == 1 ? 'YES' : 'NO';
                        } 
                    },
                ]
            }
            ]
        },
        {
            xtype: 'panel',
            id: 'prepareExamPanel',
            reference: 'prepareExamPanel',
            collapsible: true,
            collapsed: true,
            title: 'Exam Preparetion',
            margin: '10 10 10 10',
            layout: 'column',

            items: [
			{
				xtype: 'gridpanel',
				reference: 'prepareExamGrid',
				itemId: 'prepareExamGrid',
				columnWidth: 1,
				multiSelect: true,
				loadMask: true,
				store: 'gExamQuestionStore',
				plugins: [{
					ptype: 'gridfilters'
				}],
				viewConfig: {
					stripeRows: true,
					enableTextSelection: true,
				},
				features: [{
					ftype: 'grouping',
					groupHeaderTpl: '{name} ({children.length})',
					enableNoGroups: true
				}],

				dockedItems: [{
					xtype: 'toolbar',
					dock: 'top',
					itemId: 'saveExamTollbar',
					items: [
						'->',
						{
							xtype: 'button',
							padding: 2,
							text: 'Save Exam',
							reference: 'saveExamBtn',
							listeners: {
								click: 'onClickSaveExamBtn'
							}
						}
					]
				}],

				columns: [
					{
						xtype: 'gridcolumn',
						align: 'center',
						width: 100,
						dataIndex: 'questionKey',
						sortable: true,
						text: 'Question ID',
					},
					{
						header: "Question",
						align: 'center',
						flex: 1,
						sortable: true,
						dataIndex: 'question',
						filter: {type: 'string'}
					},					
					{
						xtype: 'gridcolumn',
						align: 'center',
						width: 100,
						dataIndex: 'answerOptionKey',
						sortable: true,
						text: 'Answer ID',
					},
					{
						header: "answer",
						align: 'center',
						flex: 1,
						sortable: true,
						dataIndex: 'answer',
						filter: {type: 'string'}
					},
					{
						header: "Mark",
						align: 'center',
						width: 200,
						sortable: true,
						dataIndex: 'mark',
						filter: {type: 'number'},
						editable: true,
                        editor: 'numberfield'
					},
					{
						header: "Answer Time(Second)",
						align: 'center',
						width: 200,
						sortable: true,
						dataIndex: 'timeInSecond',
						filter: {type: 'number'},
						editable: true,
                        editor: 'numberfield'
					},
					{
                        xtype: 'actioncolumn',
                        width:30,
                        sortable: false,
                        align: 'center',
                        iconCls : 'grid-delete',
                        reference: 'deleteReference',
                        tooltip: 'Delete Option',
                        handler: 'onDelFromExam'
                    },
				],
				selModel: {
					selType: 'checkboxmodel',
				}
			}
            ]
        }
	],
	listeners: {
		afterrender: 'onActivateQuestionPanelRender',
	}
});